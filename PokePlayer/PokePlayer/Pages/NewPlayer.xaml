<Page x:Class="PokePlayer.Pages.NewPlayer"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PokePlayer.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
	  FontSize="20"
      Title="NewPlayer">

	<Grid Background="#f2e8cf">
		<Grid.RowDefinitions>
			<RowDefinition Height="30"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
			<RowDefinition Height="80"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
			<RowDefinition Height="80"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>
			<RowDefinition Height="80"></RowDefinition>
			<RowDefinition Height="*"></RowDefinition>

		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*"></ColumnDefinition>
			<ColumnDefinition Width="250"></ColumnDefinition>
			<ColumnDefinition Width="*"></ColumnDefinition>
		</Grid.ColumnDefinitions>

		<TextBlock TextAlignment="Center"
		           FontSize="40"
		           Grid.Row="1"
		           Grid.ColumnSpan="3">
			New Player
		</TextBlock>

		<Grid Grid.Row="3"
		      Grid.Column="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="*"></RowDefinition>
			</Grid.RowDefinitions>


			<Label Grid.Row="0"
			       HorizontalAlignment="Center">
				Username:
			</Label>
			<TextBox x:Name="username" Grid.Row="1" VerticalContentAlignment="Center" Padding="10, 0" Text="">
				<TextBox.Style>
					<Style TargetType="{x:Type TextBox}">
						<Style.Resources>
							<Style TargetType="Border">
								<Setter Property="CornerRadius" Value="15" />
							</Style>
						</Style.Resources>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type TextBox}">
									<Border x:Name="border" CornerRadius="8" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
										<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Opacity" TargetName="border" Value="0.56"/>
										</Trigger>
										<Trigger Property="IsMouseOver" Value="true">
											<Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
										</Trigger>
										<Trigger Property="IsKeyboardFocused" Value="true">
											<Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
									<Condition Property="IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
							</MultiTrigger>
						</Style.Triggers>
					</Style>
				</TextBox.Style>
			</TextBox>
		</Grid>

		<Grid Grid.Row="5"
		      Grid.Column="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"></RowDefinition>
				<RowDefinition Height="*"></RowDefinition>
			</Grid.RowDefinitions>


			<Label Grid.Row="0"
			       HorizontalAlignment="Center">
				Password:
			</Label>
			<PasswordBox x:Name="password" Grid.Row="1" VerticalContentAlignment="Center" Padding="10, 0">
				<PasswordBox.Style>
					<Style TargetType="{x:Type PasswordBox}">
						<Style.Resources>
							<Style TargetType="Border">
								<Setter Property="CornerRadius" Value="15" />
							</Style>
						</Style.Resources>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type PasswordBox}">
									<Border x:Name="border" CornerRadius="8" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
										<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Opacity" TargetName="border" Value="0.56"/>
										</Trigger>
										<Trigger Property="IsMouseOver" Value="true">
											<Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
										</Trigger>
										<Trigger Property="IsKeyboardFocused" Value="true">
											<Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
									<Condition Property="IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
							</MultiTrigger>
						</Style.Triggers>
					</Style>
				</PasswordBox.Style>
			</PasswordBox>
		</Grid>

		<Button BorderBrush="{x:Null}"
						        Foreground="{x:Null}"
						        RenderTransformOrigin="0.5, 0.5"
								Grid.Row="7"
								Grid.Column="1"
								FontSize="25"
						        Click="ValidateUsername">
			<Button.Content>
				<TextBlock Foreground="White" FontSize="23" FontWeight="Bold" Text="Create Account"/>
			</Button.Content>
			<Button.Style>
				<Style TargetType="{x:Type Button}">
					<Setter Property="Background" Value="#386641"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Button}">
								<Border Background="{TemplateBinding Background}">
									<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="#6a994e"/>
						</Trigger>
					</Style.Triggers>
				</Style>
			</Button.Style>
			<Button.RenderTransform>
				<ScaleTransform x:Name="HoverScale" ScaleX="1" ScaleY="1"/>
			</Button.RenderTransform>
			<Button.Triggers>
				<EventTrigger RoutedEvent="Button.MouseEnter">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation
													Storyboard.TargetName="HoverScale"
													Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
													To="1.1"
													Duration="0:0:0.2">
								<DoubleAnimation.EasingFunction>
									<CircleEase  EasingMode="EaseInOut" 
														/>
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
							<DoubleAnimation
													Storyboard.TargetName="HoverScale"
													Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
													To="1.1"
													Duration="0:0:0.2">
								<DoubleAnimation.EasingFunction>
									<CircleEase  EasingMode="EaseInOut" 
														/>
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="Button.MouseLeave">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation
												Storyboard.TargetName="HoverScale"
												Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
												To="1"
												Duration="0:0:0.2">
								<DoubleAnimation.EasingFunction>
									<CircleEase  EasingMode="EaseInOut" 
													/>
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
							<DoubleAnimation
													Storyboard.TargetName="HoverScale"
													Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
													To="1"
													Duration="0:0:0.2">
								<DoubleAnimation.EasingFunction>
									<CircleEase EasingMode="EaseInOut" 
														/>
								</DoubleAnimation.EasingFunction>
							</DoubleAnimation>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Button.Triggers>
			<Button.Resources>
				<Style TargetType="{x:Type Border}">
					<Setter Property="CornerRadius" Value="15"/>
					<Setter Property="BorderBrush" Value="#a7c957"/>
				</Style>
			</Button.Resources>
		</Button>


		<Label x:Name="userExists" Content="User does already exist" Grid.Row="4" Grid.Column="1" FontSize="15" HorizontalAlignment="Center" Foreground="Red" FontWeight="Bold" Margin="0, 0, 0, 10" Padding="0" Visibility="Hidden" />

	</Grid>
</Page>
